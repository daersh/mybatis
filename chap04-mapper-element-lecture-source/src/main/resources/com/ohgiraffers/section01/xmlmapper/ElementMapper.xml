<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.ohgiraffers.section01.xmlmapper.ElementMapper">
    <!--설명 autoMapping false한 이유: 디폴트는 partial 부분적이기 때문에 정의 안되면 자동으로 해주기 때문 -->
    <resultMap id="menuResultMap1" type="com.ohgiraffers.section01.xmlmapper.MenuDTO" autoMapping="false">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
    </resultMap>


    <!--목차 1. extends 활용 :  기존 생성한 resultMap을 확장하여 사용할 수 있다.  oop 상속 관계와 비슷?
         extend 주의점
         이용 할때는 select 구문에서 부모의 resultMap인 aaa의 property도 모두 select구문에 들어있어야 한다. 그렇지 않을 경우 에러가 발생한다.
    -->
    <resultMap id="menuResultMap2" type="com.ohgiraffers.section01.xmlmapper.MenuDTO" extends="menuResultMap1">
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <select id="selectResultMapTest" resultMap="menuResultMap2">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
    </select>



    <!--목차 2. 외래키와 같이 다른 DTO와 연결짓기   1 대 1 관계에 사용 or N 대 1 관계에 사용!-->
<!--    <resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.section01.xmlmapper.MenuAndCategoryDTO">-->
<!--        <id property="menuCode" column="MENU_CODE"/>-->
<!--        <result property="menuName" column="MENU_NAME"/>-->
<!--        <result property="menuPrice" column="MENU_PRICE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--        <association property="category" resultMap="categoryResultMap"/>-->
<!--    </resultMap>-->
<!--    <resultMap id="categoryResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryDTO">-->
<!--        <id property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="categoryName" column="CATEGORY_NAME"/>-->
<!--        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>-->
<!--    </resultMap>-->

    <resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.section01.xmlmapper.MenuAndCategoryDTO">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        <!--설명. 자바타입: 객체에 셋팅되는 변수 타입을 명시적으로 정의하기 위해 사용 -->
        <association property="category" javaType="com.ohgiraffers.section01.xmlmapper.CategoryDTO">
            <id property="categoryCode" column="CATEGORY_CODE"/>
            <result property="categoryName" column="CATEGORY_NAME"/>
            <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        </association>

    </resultMap>

    <select id="selectResultMapAssociationTest" resultMap="menuAndCategoryResultMap">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , B.CATEGORY_CODE
             , B.CATEGORY_NAME
             , B.REF_CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU A
          JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
         WHERE A.ORDERABLE_STATUS = 'Y'
    </select>



    <!--목차 3. Collection property: 한 행에 여러 개의 정보가 필요할 때 사용!   1대다 또는 다대다 관계에 사-->
<!--    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryAndMenuDTO">-->
<!--        <id property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="categoryName" column="CATEGORY_NAME"/>-->
<!--        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>-->
<!--        <collection property="menus" resultMap="menuResultMap"/>-->
<!--    </resultMap>-->
<!--    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xmlmapper.MenuDTO">-->
<!--        <id property="menuCode" column="MENU_CODE"/>-->
<!--        <result property="menuName" column="MENU_NAME"/>-->
<!--        <result property="menuPrice" column="MENU_PRICE"/>-->
<!--        <result property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--    </resultMap>-->

    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryAndMenuDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>

        <!--설명. ofType = 컬렉션에서 안에 들어오는 타입 정의-->
        <collection property="menus" ofType="com.ohgiraffers.section01.xmlmapper.MenuDTO">
            <id property="menuCode" column="MENU_CODE"/>
            <result property="menuName" column="MENU_NAME"/>
            <result property="menuPrice" column="MENU_PRICE"/>
            <result property="categoryCode" column="CATEGORY_CODE"/>
            <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        </collection>
    </resultMap>

    <select id="selectResultMapCollectionTest" resultMap="categoryAndMenuResultMap">
        SELECT
               A.CATEGORY_CODE
             , A.CATEGORY_NAME
             , A.REF_CATEGORY_CODE
             , B.MENU_CODE
             , B.MENU_NAME
             , B.MENU_PRICE
             , B.CATEGORY_CODE
             , B.ORDERABLE_STATUS
          FROM TBL_CATEGORY A
          LEFT JOIN TBL_MENU B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
         ORDER BY A.CATEGORY_CODE
    </select>
</mapper>